{
	"info": {
		"_postman_id": "2663eb16-3d3a-45d5-b8c0-b7ca2451e137",
		"name": "FetinNet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35951080"
	},
	"item": [
		{
			"name": "Alunos",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.environment.set('Cookie', response.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}get-csrf-token",
							"host": [
								"{{BaseURL}}get-csrf-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"pizz@\",\n    \"password\" : \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}login",
							"host": [
								"{{BaseURL}}login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Todos os Alunos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Recebe um array de alunos\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"array\");",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property(\"nome\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Aluno/all",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Aluno",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Email inexistente no DB\", function () {",
									"    pm.response.to.have.status(404);",
									"",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"error\", \"Not Found\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}api/v1/Aluno/get/?email=emailinexistente@gmail.com",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Aluno",
								"get",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "emailinexistente@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Campo faltando",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const addAlunoUrl = pm.environment.get(\"BaseURL\") + \"api/v1/Aluno/add\";\r",
									"\r",
									"// Dados obrigatórios do aluno\r",
									"const aluno = {\r",
									"  email: \"joao.teste@fetin.com\",\r",
									"  nome: \"João Teste\",\r",
									"  password: \"senha123\",\r",
									"  acesso: \"ROLE_USER\",\r",
									"  ativo: 0\r",
									"};\r",
									"\r",
									"// Faz o POST para criar o aluno antes da exclusão\r",
									"pm.sendRequest({\r",
									"  url: addAlunoUrl,\r",
									"  method: \"POST\",\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/json\",\r",
									"    \"X-XSRF-TOKEN\": pm.environment.get(\"Cookie\")\r",
									"  },\r",
									"  body: {\r",
									"    mode: \"raw\",\r",
									"    raw: JSON.stringify(aluno)\r",
									"  }\r",
									"}, function (err, res) {\r",
									"  if (err) {\r",
									"    console.log(\"Erro ao criar aluno antes do DELETE:\", err);\r",
									"  } else {\r",
									"    console.log(\"Aluno criado com sucesso antes do DELETE.\");\r",
									"  }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Faltando campo de email para retornar o projeto do aluno\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"error\", \"Um email deve ser enviado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Aluno/projects",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Aluno",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aluno inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Respota negativa de aluno encontrado\", function () {",
									"    pm.response.to.have.status(404);",
									"",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"error\", \"Not Found\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}api/v1/Aluno/delete/?email=emailinexistente@gmail.com",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Aluno",
								"delete",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "emailinexistente@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Aluno inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Aluno não encontrado para atualizar\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"error\", \"Not Found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Aluno/update/?email=emailinexistente@gmail.com",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Aluno",
								"update",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "emailinexistente@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Aluno já cadastrado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const addAlunoUrl = pm.environment.get(\"BaseURL\") + \"api/v1/Aluno/add\";\r",
									"\r",
									"// Dados obrigatórios do aluno\r",
									"const aluno = {\r",
									"  email: \"joao.teste@fetin.com\",\r",
									"  nome: \"João Teste\",\r",
									"  password: \"senha123\",\r",
									"  acesso: \"ROLE_USER\",\r",
									"  ativo: 0\r",
									"};\r",
									"\r",
									"// Faz o POST para criar o aluno antes da exclusão\r",
									"pm.sendRequest({\r",
									"  url: addAlunoUrl,\r",
									"  method: \"POST\",\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/json\",\r",
									"    \"X-XSRF-TOKEN\": pm.environment.get(\"Cookie\")\r",
									"  },\r",
									"  body: {\r",
									"    mode: \"raw\",\r",
									"    raw: JSON.stringify(aluno)\r",
									"  }\r",
									"}, function (err, res) {\r",
									"  if (err) {\r",
									"    console.log(\"Erro ao criar aluno antes do DELETE:\", err);\r",
									"  } else {\r",
									"    console.log(\"Aluno criado com sucesso antes do DELETE.\");\r",
									"  }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Aluno já cadastrado\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"detail\", \"Aluno já cadastrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"joao.teste@fetin.com\",\r\n    \"nome\": \"João Teste\",\r\n    \"password\": \"senha123\",\r\n    \"acesso\": \"ROLE_USER\",\r\n    \"ativo\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Aluno/add",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Aluno",
								"add"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orientador",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.environment.set('Cookie', response.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}get-csrf-token",
							"host": [
								"{{BaseURL}}get-csrf-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"pizz@\",\n    \"password\" : \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}login",
							"host": [
								"{{BaseURL}}login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Create Orientador Falha 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Orientador já cadastrado\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('detail');\r",
									"    pm.expect(jsonData.detail).to.eql(\"Orientador já cadastrado\");\r",
									"    pm.expect(jsonData.title).to.eql(\"Not Acceptable\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"jorginfla567@email.com\",\r\n    \"nome\": \"jorginfla\",\r\n    \"password\": \"1234\",\r\n    \"acesso\": \"PROFESSOR\",\r\n    \"ativo\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Orientador/add",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Orientador",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Create Orientador Falha 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Orientador não criado\", function () {\r",
									"    pm.response.to.have.status(406);\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(jsonData.error).to.eql(\"Not Acceptable\");\r",
									"    pm.expect(jsonData.status).to.eql(406);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"jorginfla@email.com\",\r\n    \"nome\": \"jorginfla\",\r\n    \"acesso\": \"PROFESSOR\",\r\n    \"ativo\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Orientador/add",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Orientador",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orientador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Orientador encontrado 'jorginfla'\", function () {\r",
									"    pm.expect(pm.response.text()).to.eql(\"jorginfla\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}api/v1/Orientador/get/jorginfla@email.com",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Orientador",
								"get",
								"jorginfla@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orientador Falha",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Orientador não encontrado\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('error');\r",
									"    pm.expect(jsonData.error).to.eql(\"Not Found\");\r",
									"    pm.expect(jsonData.status).to.eql(404);\r",
									"    pm.expect(jsonData.path).to.eql(\"/Orientador/get/jorgin2fla12341@email.com\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}Orientador/get/jorgin2fla12341@email.com",
							"host": [
								"{{BaseURL}}Orientador"
							],
							"path": [
								"get",
								"jorgin2fla12341@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Orientador",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete do Orientador com Sucesso\", function () {\r",
									"    pm.response.to.have.status(200); \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.all.keys('password', 'acesso', 'email', 'ativo', 'nome');\r",
									"    pm.expect(jsonData.acesso).to.eql(\"ROLE_PROFESSOR\");\r",
									"    pm.expect(jsonData.email).to.eql(\"jorginfla@email.com\");\r",
									"    pm.expect(jsonData.ativo).to.eql(0);\r",
									"    pm.expect(jsonData.nome).to.eql(\"jorginfla\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}api/v1/Orientador/delete/jorginfla@email.com",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Orientador",
								"delete",
								"jorginfla@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Orientador Falha",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Orientador não deletado nem encontrado\", function () {\r",
									"    pm.expect(pm.response.text()).to.eql(\"null\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}api/v1/Orientador/delete/jorginflaplrpl@email.com",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Orientador",
								"delete",
								"jorginflaplrpl@email.com"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Projetos",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"pizz@\",\n    \"password\" : \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}login",
							"host": [
								"{{BaseURL}}login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.environment.set('Cookie', response.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}get-csrf-token",
							"host": [
								"{{BaseURL}}get-csrf-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Todos os Times",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Recebe um array de times\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"    if (jsonData.length > 0) {\r",
									"        pm.expect(jsonData[0]).to.have.property(\"numeroGrupo\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/all",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleta time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Time deletado com sucesso\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/delete?numgrupo=316",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"delete"
							],
							"query": [
								{
									"key": "numgrupo",
									"value": "316"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleta time Inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Time não encontrado\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/delete?numgrupo=1000",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"delete"
							],
							"query": [
								{
									"key": "numgrupo",
									"value": "1000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cria projeto",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "titulo",
									"value": "RelogiodoBen9000",
									"type": "text"
								},
								{
									"key": "status",
									"value": "Desclassificado",
									"type": "text"
								},
								{
									"key": "paralela",
									"value": "Outro",
									"type": "text"
								},
								{
									"key": "email_aluno1",
									"value": "linguica@gmail.com",
									"type": "text"
								},
								{
									"key": "orientador_email",
									"value": "chris@inatel.br",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/create",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cria projeto com email inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Não deu certo a criação\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "titulo",
									"value": "RelogiodoBen9000",
									"type": "text"
								},
								{
									"key": "status",
									"value": "Desclassificado",
									"type": "text"
								},
								{
									"key": "paralela",
									"value": "Outro",
									"type": "text"
								},
								{
									"key": "email_aluno1",
									"value": "3213219312830918",
									"type": "text"
								},
								{
									"key": "orientador_email",
									"value": "chris@inatel.br",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/create",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Busca time por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		}
	]
}